apply plugin: 'java'
apply plugin: 'maven'
apply plugin: "sonar-runner"

group = 'fr.echoeslabs.migration.diffutils'
version = '1.4.1'

description = "java-diff-utils"

sourceCompatibility = 1.7
targetCompatibility = 1.7

def getGitBranch()  {
	
	
	try {
		def stdout = new ByteArrayOutputStream()
		exec {
			executable = "git"
			args = [
				'rev-parse',
				'--abbrev-ref',
				'HEAD'
			]
			standardOutput = stdout
		}
		def currentBranch = stdout.toString().trim()
		def lastPath = currentBranch.split('/')
		return lastPath[lastPath.length-1]
	} catch(Exception e) {
		e.printStackTrace()
		return "local"
	}
}
if (!"master".equals(getGitBranch())) {
	version="$version." + getGitBranch()
}


repositories {
	mavenCentral()
	mavenLocal()
}
dependencies {
	compile 'commons-io:commons-io:2.4'
	
	testCompile group: 'junit', name: 'junit', version:'4.12'
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: "$nexusURL/nexus/content/repositories/migration-framework/") {
				authentication(userName: mavenUser, password: mavenPassword)
			}
			snapshotRepository(url: "$nexusURL/nexus/content/repositories/migration-framework/") {
				authentication(userName: mavenUser, password: mavenPassword)
				//				}
			}
		}
	}
}

sonarRunner {
	repositories { jcenter() }
	toolVersion = "2.4"
	
	// Fine grained control over the runner process
	forkOptions { maxHeapSize = '1024m' }
	sonarProperties {
		property "sonar.host.url", sonarURL
		property "sonar.jdbc.url", sonarJDBC
		property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
		property "sonar.jdbc.username", sonarUser
		property "sonar.jdbc.password", sonarPassword
		property "sonar.projectKey", "java-difflib-$version"
		property "sonar.projectName", "Java Difflib $version"
		property "sonar.projectVersion", "$version"
		property "sonar.branch", getGitBranch()
	}
}
